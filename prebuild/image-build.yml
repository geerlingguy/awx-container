---
- name: Check if distribution file exists.
  shell: ls /opt/awx/dist/ | grep "^awx-.*\.tar\.gz$"
  changed_when: False
  failed_when: False
  register: sdist_file

- name: Set awx sdist filename (if it exists).
  set_fact:
    awx_sdist_file: "{{ sdist_file.stdout_lines.0 }}"
  when: sdist_file.rc == 0

- name: Clean distribution.
  shell: make clean
  args:
    chdir: "{{ awx_repo_dir }}"
  ignore_errors: yes
  when: not sdist_file.rc == 0

- name: Build AWX distribution.
  shell: make sdist
  args:
    chdir: "{{ awx_repo_dir }}"
    creates: "{{ awx_repo_dir }}/dist/{{ awx_sdist_file }}"

- name: Ensure docker_base_path exists.
  file:
    path: "{{ docker_base_path }}"
    state: directory

- name: Get awx sdist filename.
  shell: ls /opt/awx/dist/ | grep "^awx-.*\.tar\.gz$"
  changed_when: False
  register: sdist_file

- name: Set awx sdist filename and awx version.
  set_fact:
    awx_sdist_file: "{{ sdist_file.stdout_lines.0 }}"
    awx_version: "{{ sdist_file.stdout_lines.0 | regex_replace('^awx-(.*).tar.gz$', '\\1') }}"

- name: Debug the detected awx_version (in test mode).
  debug: var=awx_version
  # when: prebuild_test_mode

- name: Stage sdist.
  copy:
    src: "{{ awx_repo_dir }}/dist/{{ awx_sdist_file }}"
    dest: "{{ docker_base_path }}/{{ awx_sdist_file }}"

- name: Stage config watcher.
  copy:
    src: "{{ awx_repo_dir }}/tools/scripts/config-watcher"
    dest: "{{ docker_base_path }}/config-watcher"

- name: Create web Dockerfile from template.
  template:
    src: "{{ awx_image_build_path }}/templates/Dockerfile.j2"
    dest: "{{ docker_base_path }}/Dockerfile"

- name: Temporarily set awx_version for task Dockerfile to work.
  set_fact:
    awx_version_backup: "{{ awx_version }}"
    awx_version: "{{ awx_repo_version }}"
    web_image: "{{ awx_web_image }}"

- name: Create task Dockerfile from template.
  template:
    src: "{{ awx_image_build_path }}/templates/Dockerfile.task.j2"
    dest: "{{ docker_base_path }}/Dockerfile.task"

- name: Set awx_version back to normal.
  set_fact:
    awx_version: "{{ awx_version_backup }}"

- name: Stage some configuration files.
  copy:
    src: "{{ awx_image_build_path }}/files/{{ item.name }}"
    dest: "{{ docker_base_path }}/{{ item.name }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items:
    - { name: launch_awx.sh, mode: '0700' }
    - { name: launch_awx_task.sh, mode: '0700' }
    - { name: supervisor.conf }
    - { name: supervisor_task.conf }
    - { name: settings.py }
    - { name: ansible.repo }
    - { name: RPM-GPG-KEY-ansible-release }

- name: Stage some configuration file for nginx.
  copy:
    src: "{{ awx_image_build_path }}/templates/{{ item.name }}"
    dest: "{{ docker_base_path }}/{{ item.name }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items:
    - { name: nginx.conf }

- name: Stage some other files.
  copy:
    src: "{{ awx_repo_dir }}/{{ item.src_name }}"
    dest: "{{ docker_base_path }}/{{ item.dest_name }}"
  with_items:
    - src_name: requirements/
      dest_name: requirements
    - src_name: Makefile
      dest_name: Makefile

- name: Build base web image
  docker_image:
    path: "{{ docker_base_path }}"
    dockerfile: Dockerfile
    name: "{{ awx_web_image }}"
    tag: "{{ awx_repo_version }}"

- name: Build base task image
  docker_image:
    path: "{{ docker_base_path }}"
    dockerfile: Dockerfile.task
    name: "{{ awx_task_image }}"
    tag: "{{ awx_repo_version }}"
    pull: no

- name: Clean docker base directory
  file:
    path: "{{ docker_base_path }}"
    state: absent
  when: cleanup_docker_base|default(True)
